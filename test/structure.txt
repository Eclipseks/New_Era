Структура проекта:
/Users/sirismoon/Project/New_Era2.0/env
/Users/sirismoon/Project/New_Era2.0/New_Era
/Users/sirismoon/Project/New_Era2.0/New_Era/main
/Users/sirismoon/Project/New_Era2.0/New_Era/main/__pycache__
/Users/sirismoon/Project/New_Era2.0/New_Era/main/media
/Users/sirismoon/Project/New_Era2.0/New_Era/main/migrations
/Users/sirismoon/Project/New_Era2.0/New_Era/main/static
/Users/sirismoon/Project/New_Era2.0/New_Era/main/templates
/Users/sirismoon/Project/New_Era2.0/New_Era/main/__init__.py
/Users/sirismoon/Project/New_Era2.0/New_Era/main/admin.py
/Users/sirismoon/Project/New_Era2.0/New_Era/main/apps.py
/Users/sirismoon/Project/New_Era2.0/New_Era/main/forms.py
/Users/sirismoon/Project/New_Era2.0/New_Era/main/models.py
/Users/sirismoon/Project/New_Era2.0/New_Era/main/tests.py
/Users/sirismoon/Project/New_Era2.0/New_Era/main/views.py
/Users/sirismoon/Project/New_Era2.0/New_Era/New_Era
/Users/sirismoon/Project/New_Era2.0/New_Era/New_Era/__pycache__
/Users/sirismoon/Project/New_Era2.0/New_Era/New_Era/__init__.py
/Users/sirismoon/Project/New_Era2.0/New_Era/New_Era/asgi.py
/Users/sirismoon/Project/New_Era2.0/New_Era/New_Era/settings.py
/Users/sirismoon/Project/New_Era2.0/New_Era/New_Era/urls.py
/Users/sirismoon/Project/New_Era2.0/New_Era/New_Era/wsgi.py
/Users/sirismoon/Project/New_Era2.0/New_Era/db.sqlite3
/Users/sirismoon/Project/New_Era2.0/New_Era/manage.py

/Users/sirismoon/Project/New_Era2.0/New_Era/main/models.py:
from django.db import models

class Upload(models.Model):
    first_name = models.CharField(max_length=50)
    last_name = models.CharField(max_length=50)
    phone = models.CharField(max_length=20)
    email = models.EmailField()
    brand = models.CharField(max_length=40)
    county = models.CharField(max_length=5)
    date_registr = models.DateField(auto_now_add=True)
    date_upload = models.DateField(auto_now_add=True)
    mpc1 = models.FloatField()
    mpc2 = models.FloatField()
    mpc3 = models.FloatField()
    mpc4 = models.FloatField()

/Users/sirismoon/Project/New_Era2.0/New_Era/main/views.py:
from datetime import datetime

from django.shortcuts import render
from .models import Upload


def upload_list(request):
    # get the sorting parameter from the URL
    sort = request.GET.get('sort')

    # set the default sorting
    if sort == None or sort == 'DateUpload':
        files = Upload.objects.order_by('date_upload')
    elif sort == 'Firstname':
        files = Upload.objects.order_by('first_name')
    elif sort == 'Lastname':
        files = Upload.objects.order_by('last_name')
    elif sort == 'Email':
        files = Upload.objects.order_by('email')
    elif sort == 'Brend':
        files = Upload.objects.order_by('brand')
    elif sort == 'Country':
        files = Upload.objects.order_by('county')
    elif sort == 'DateRegistr':
        files = Upload.objects.order_by('date_registr')
    elif sort == 'Mpc1':
        files = Upload.objects.order_by('mpc1')
    elif sort == 'Mpc2':
        files = Upload.objects.order_by('mpc2')
    elif sort == 'Mpc3':
        files = Upload.objects.order_by('mpc3')
    elif sort == 'Mpc4':
        files = Upload.objects.order_by('mpc4')
    elif sort == 'Phone':
        files = Upload.objects.order_by('phone')
    
    return render(request, 'main/upload_list.html', {'files': files})

from django.http import HttpResponseRedirect
from django.urls import reverse
from .forms import UploadFileForm
from .models import Upload
import pandas as pd


def upload_file(request):
    if request.method == 'POST':
        form = UploadFileForm(request.POST, request.FILES)
        if form.is_valid():
            file = request.FILES['file']
            df = pd.read_excel(file)  # для Excel
            # df = pd.read_csv(file)  # для CSV
            for index, row in df.iterrows():
                try:
                    upload = Upload(
                        first_name=row['first_name'],
                        last_name=row['last_name'],
                        phone=row['phone'],
                        email=row['email'],
                        brand=row['brand'],
                        # county=row['county'],
                        date_registr=row['date_registr'],
                        date_upload=datetime.now(),
                        mpc1=row['mpc1'],
                        mpc2=row['mpc2'],
                        mpc3=row['mpc3'],
                        mpc4=row['mpc4']
                    )
                    upload.save()
                except:
                    continue
            return HttpResponseRedirect(reverse('upload_list'))
    else:
        form = UploadFileForm()
    return render(request, 'main/upload_file.html', {'form': form})

/Users/sirismoon/Project/New_Era2.0/New_Era/New_Era/urls.py:
from django.contrib import admin
from django.urls import path
from main import views

urlpatterns = [
    path('', views.upload_list, name='upload_list'),
    path('admin/', admin.site.urls),
]

/Users/sirismoon/Project/New_Era2.0/New_Era/New_Era/settings.py:
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=@ha6!om7a(8=h$%7ec9tn%920&smvktghxf0@yyv1a0e=dr22'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'New_Era.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'main' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'New_Era.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

/Users/sirismoon/Project/New_Era2.0/New_Era/main/templates/base.html:
<!DOCTYPE html>
<html>
  <head>
    <title>{% block title %}New Era{% endblock %}</title>
    {% load static %}
    <link rel="stylesheet" type="text/css" href="{% static 'upload_list.css' %}">
  </head>
  <header>
    <div class="logo">
      <img src="logo.png" alt="Company Logo">
    </div>
    <div class="import-export">
      <button class="import">Import</button>
      <button class="export">Export</button>
    </div>
    <div class="date-range">
      {% comment %} <label for="start-date"></label> {% endcomment %}
      <input type="date" id="start-date" name="start-date">
      <label for="end-date"></label>
      <input type="date" id="end-date" name="end-date">
    </div>
  </header>
  <body>
    {% block content %}
    {% endblock %}
  </body>
</html>
{% comment %} <a href="{% url 'import_app' %}"> {% endcomment %}

/Users/sirismoon/Project/New_Era2.0/New_Era/main/templates/main/upload_list.html:
{% extends 'base.html' %}

{% block content %}
  <table>
    <thead>
      <tr>
        <th><input type="checkbox" id="select-all"></th> <!-- Добавляем колонку с checkbox -->
        <th><a href="?sort=Firstname">First name</a></th>
        <th><a href="?sort=Lastname">Last name</a></th>
        <th><a href="?sort=Phone">Phone</a></th>
        <th><a href="?sort=Email">Email</a></th>
        <th><a href="?sort=DateRegistr">Date registr</a></th>
        <th><a href="?sort=DateUpload">Date upload</a></th>
        <th><a href="?sort=Brend">Brend</a></th>
        <th><a href="?sort=Country">Country</a></th>
        <th><a href="?sort=Mpc1">Mpc1</a></th>
        <th><a href="?sort=Mpc2">Mpc2</a></th>
        <th><a href="?sort=Mpc3">Mpc3</a></th>
        <th><a href="?sort=Mpc4">Mpc4</a></th>
        <th>Count</th> <!-- Добавляем колонку со счетчиком -->
      </tr>
    </thead>
    <tbody>
      {% for file in files %}
      <tr>
        <td><input type="checkbox" class="row-checkbox"></td> <!-- Добавляем checkbox для каждой строки -->
        <td>{{ file.first_name }}</td>
        <td>{{ file.last_name }}</td>
        <td>{{ file.phone }}</td>
        <td>{{ file.email }}</td>
        <td>{{ file.date_registr }}</td>
        <td>{{ file.date_upload }}</td>
        <td>{{ file.brand }}</td>
        <td>{{ file.county }}</td>
        <td>{{ file.mpc1 }}</td>
        <td>{{ file.mpc2 }}</td>
        <td>{{ file.mpc3 }}</td>
        <td>{{ file.mpc4 }}</td>
        <td>{{ forloop.counter }}</td> <!-- Добавляем счетчик для каждой строки -->
      </tr>
      {% endfor %}
    </tbody>
  </table>
{% endblock %}

/Users/sirismoon/Project/New_Era2.0/New_Era/main/static/upload_list.css:
/* Style for the table */
body {
  margin: 0px;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #262525;
  padding: 10px 20px;
}

.logo img {
  width: 100px;
}

.import-export {
  display: flex;
}

.import-export button {
  background-color: #ffd700;
  color: #000;
  padding: 8px 16px;
  border: none;
  margin: 0 10px;
  border-radius: 4px;
  font-weight: bold;
  cursor: pointer;
}

.date-range {
  display: flex;
}

.date-range label {
  color: #333;
  font-weight: bold;
  margin-right: 10px;
}

.date-range input[type="date"] {
  padding: 6px;
  border: none;
  border-radius: 4px;
}

table {
  border-collapse: collapse;
  width: 100%;
  color: #ffffffe3;
  background-color: #000000ad;
  border: 1px solid #FFD700;
  /* border-radius: 3px; */
  overflow: hidden;
  box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
  /* font-size: 10; */
}

th, td {
  padding: 10px 10px;
  text-align: left;
}

th {
  background-color: #FFD700;
  color: black;
  border: 1px solid #000000ad;
}

td {
  border: 1px solid #FFD700;
}

table td, table th {
  font-size: 15px;
}